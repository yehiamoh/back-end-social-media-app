generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id    String   @id @default(uuid())
  user_name  String
  email      String   @unique
  password   String
  bio        String?
  created_At DateTime @default(now())
  updated_At DateTime @updatedAt

  following Follows[] @relation("FollowingRelation")
  followers Follows[] @relation("FollowersRelation")

  Posts Posts[] @relation("postAuthor")

  comments Comments[]

  like Likes[]
}

model Follows {
  follower_id  String
  following_id String
  createdAt    DateTime @default(now())

  follower  User @relation("FollowingRelation", fields: [follower_id], references: [user_id])
  following User @relation("FollowersRelation", fields: [following_id], references: [user_id])

  @@id([follower_id, following_id]) // Composite primary key
}

model Posts {
  post_id    String   @id @default(uuid())
  user_id    String
  content    String
  media_url  String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  likes Likes[] 
  comment Comments[]

  author User @relation("postAuthor", fields: [user_id], references: [user_id])
}

model Likes {
  like_id String @id @default(uuid())
  user_id String
  post_id String 
  created_at DateTime @default(now())
  post Posts @relation(fields: [post_id],references: [post_id])
  user User @relation(fields: [user_id],references: [user_id])
   @@unique([post_id, user_id])
}

model Comments{
  comment_id String @id @default(uuid())
  post_id String
  user_id String
  text    String
  created_At  DateTime @default(now())

  post Posts @relation(fields: [post_id],references: [post_id])
  user User @relation(fields: [user_id],references: [user_id])

  @@unique([post_id,user_id])

}
